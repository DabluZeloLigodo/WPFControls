<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--CmbItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="32"></Setter>
                    <Setter Property="MinWidth" Value="60"></Setter>
                    <Setter Property="FontSize" Value="12"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="Transparent">
                                    <ContentPresenter x:Name="contentPresenter" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"></ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                    </Trigger> 
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="comboBoxBorder" BorderThickness="1" BorderBrush="#AFAFAF" Background="{TemplateBinding Background}" >
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" x:Name="grid">
                                <ToggleButton
                                Width="{Binding ElementName=grid,Path=ActualWidth}"
                                Height="{Binding ElementName=grid, Path=ActualHeight}"
                                Content="{TemplateBinding Text}" VerticalAlignment="Center"
                                HorizontalAlignment="Left" Margin="5,0,0,0"
                                BorderThickness="0"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}" 
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"
                                >
                                    <ToggleButton.Style >
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border   Background="{TemplateBinding Background}" BorderThickness="0"  >
                                                            <TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" Margin="4 0 0 0"  HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Background" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>

                            <Grid Grid.Column="1" >
                                <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Foreground="{TemplateBinding Foreground}"
                                          ClickMode="Press">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <Grid>
                                                                <Viewbox x:Name="ArrowVbx" Width="12" Height="12">
                                                                    <Path Fill="#666666" Data="M9.95941,0.800781 L11.1998,1.88866 L5.9998,7.20078 L0.799805,1.88866 L2.0402,0.800781 L5.9998,4.8452 L9.95941,0.800781 Z"/>
                                                                    <Viewbox.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform/>
                                                                            <SkewTransform/>
                                                                            <RotateTransform CenterX="6" CenterY="4" Angle="0"/>
                                                                            <TranslateTransform/>
                                                                        </TransformGroup>
                                                                    </Viewbox.RenderTransform>
                                                                </Viewbox>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <EventTrigger RoutedEvent="Checked">
                                                                <BeginStoryboard>
                                                                    <Storyboard >
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArrowVbx" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>

                                                            <EventTrigger RoutedEvent="Unchecked">
                                                                <BeginStoryboard>
                                                                    <Storyboard >
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArrowVbx" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180"/>
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="0" Opacity="0.5"/>
                                    </Border.Effect>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="comboBoxBorder" Property="BorderBrush" Value="#388EF7"></Setter>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#00BFFF" ShadowDepth="0" BlurRadius="5" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" /> 
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>